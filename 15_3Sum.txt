/********************************************************************************
Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note: The solution set must not contain duplicate triplets.

For example, given array S = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*****************************************************************************/
class Solution {
public:
	vector<vector<int>> threeSum(vector<int>& nums) {
		if (nums.size()<3) return{};
		vector<vector<int>> result;
		sort(nums.begin(), nums.end());
		for (int i = 0; i < nums.size(); i++){
			int l = i + 1, r = nums.size() - 1;
			while (l < r){
				if (nums[l] + nums[r] < -nums[i]){
					l++;
				}
				else if (nums[l] + nums[r] == -nums[i]){
					vector<int> tmp;
					tmp.push_back(nums[i]);
					tmp.push_back(nums[l]);
					tmp.push_back(nums[r]);
					result.push_back(tmp);
					while (l < r &&nums[l] == tmp[1]) l++;
					while (r > l && nums[r] == tmp[0]) r--;
				}
				else{
					r--;
				}
			}
			while (i + 1 < nums.size() && nums[i] == nums[i + 1]) i++;
		}
		return result;
	}
};