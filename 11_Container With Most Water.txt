/********************************************************
Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0).
 Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container and n is at least 2.
********************************************************/
//选择其中两条垂直线，算得这两条线组成的容器的容量并记录每次出现的最大值
//从左右两个直线中选择最小的放弃，因为较长的那个还有可能与其他线段组成一个更大的容器
//但较短的那个永远也无法和其他线段组成更大的容器了，因为容量由较短的线段限制了
class Solution {
public:
    int maxArea(vector<int>& height) {
        int ans = 0;
        int i = 0, j = height.size()-1;
        while(i < j){
            int sum = (j - i) * min(height[i], height[j]);
            if(sum > ans) ans = sum;
            if(height[i] < height[j]) i++;
            else j--;
        }
        return ans;
    }
};